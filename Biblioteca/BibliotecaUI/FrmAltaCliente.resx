<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LwmY8bTDw9bPAAAAAElFTkSuQmCC
</value>
  </data>
</root>