<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>